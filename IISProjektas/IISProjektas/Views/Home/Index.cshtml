@model IISProjektas.Models.AdvertisementFilterModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Pagrindinis puslapis";
}


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@if (Request.Cookies["MessageSent"] != null && Request.Cookies["MessageSent"].Value == "1")
    {
<h3 style="color:green">
    Žinutė sėkmingai išsiųsta
    <script type="text/javascript"> alert("Žinutė sėkmingai išsiųsta")</script>
</h3>
<br />
    }
<h2> Filtras</h2>
@using (Html.BeginForm(null, null, FormMethod.Get, new { id = "filterForm" }))
{
    <fieldset>
        <div style="display:block;float:left">
            <div class="editor-label">
                @Html.LabelFor(model => model.usernameFilter)
            </div>
            <div class="editor-field">
                @*@Html.TextBoxFor(model => model.usernameFilter)
                    @Html.ValidationMessageFor(model => model.usernameFilter)*@
                @Html.TextBox("usernameFilter", ViewBag.descriptionFilter as string)
            </div>
        </div>
        <div style="display:block;float:left; margin-left:30px;">
            <div class="editor-label">
                @Html.LabelFor(model => model.categoryFilter)
            </div>
            <div class="editor-field">
                @*@Html.DropDownListFor(model => model.categoryFilter, new SelectList(Model.categoryDropDownList, "Value", "Text"), new { @class = "dropDown" })
                    @Html.ValidationMessageFor(model => model.categoryFilter)*@
                @Html.DropDownList("categoryFilter", new SelectList(ViewBag.categoryDropDownList, "Value", "Text"), new { @class = "dropDown" })
            </div>
        </div>
        <div style="display:inline-block">
            <div class="editor-label">
                @Html.LabelFor(model => model.descriptionFilter)
            </div>
            <div class="editor-field">
                @*@Html.TextAreaFor(model => model.descriptionFilter)
                    @Html.ValidationMessageFor(model => model.descriptionFilter)*@
                @Html.TextArea("descriptionFilter", ViewBag.descriptionFilter as string)

            </div>
        </div>
        <br />


        <input type="submit" value="Filtruoti" />

        <span class="Back_button" style="font:-webkit-small-control" onclick="resetFilter()">Išvalyti filtrą</span>

    </fieldset>
}
@* bootstrap table strip  su div apsirašo*@


@*
        @foreach (var item in Model.adsList)
        {

            <div style="border:1px solid black;margin-left:10px;margin-right:10px; width:700px;display:inline-block;clear:both">
                <span class="advertisement-image">

                    <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(item.image))" alt="Image" height="160px" width="160px" />

                </span>
                <span class="advertisement-author">
                    Skelbimo autorius: @Html.ActionLink(item.author, "Details", "User", new { id = item.author_id }, null)
                </span>
                <span class="advertisement-category">
                    Kategorija: @Html.DisplayFor(x => item.category)
                </span>
                <span style="display:inline-block; text-align:right;float:right;margin-right:10px">
                    Įkėlimo data: @Html.DisplayFor(x => item.dateCreated)
                </span>

                <h3 style="text-align:center">@Html.DisplayFor(x => item.name)</h3>
                <span style="margin:5px;display:inline-block">
                    @Html.DisplayFor(x => item.description)
                </span>
                @if (Session["Permissions"] != null && int.Parse(Session["Permissions"].ToString()) == 3)
                {
                    <span style="float:right;display:block;margin-top:5px" class="Back_button">
                        @Html.ActionLink("Redaguoti", "Edit", "Advertisement", new { id = item.Id }, null)
                    </span>
                    <br /><br />
                    <span style="float:right;display:block" class="Back_button">
                        @Html.ActionLink("Ištrinti", "Delete", "Advertisement", new { id = item.Id }, null)
                    </span>
                }
            </div>

        }

    <table class="table table-bordered table-striped" style="border:2px solid blue">*@
<table class="table table-striped">
    <thead style="border-bottom: thin solid gray;margin-bottom:10px">
    <th style="width:150px">Autorius</th>
    <th style="width:300px;text-align:center">Skelbimas</th>
    <th style="width:120px">Kategorija</th>
    <th style="width:150px">Įkėlimo data</th>
    @if (Session["Permissions"] != null && int.Parse(Session["Permissions"].ToString()) > 1)
    {
        <th>Redaguoti</th>
        <th>Ištrinti</th>
    }
   
    </thead>


    <tbody>
        @foreach (var item in Model.adsList)
        {
            <tr style="border-bottom: thin solid gray">
                <td>@Html.ActionLink(item.author, "details", "User", new {id = item.author_id}, null)</td>
                <td style="text-align:center">
                    <strong>@Html.ActionLink(item.name, "Details", "Advertisement", new {id = item.Id}, null)</strong><br />
                    @Html.Raw(item.description.Length > 35 ? item.description.Substring(0, 35)+"<text>...</text>" : item.description)
                </td>
                <td>@Html.DisplayFor(x => item.category)</td>
                <td>@Html.DisplayFor(x => item.dateCreated)</td>

                @if (Session["Permissions"] != null && int.Parse(Session["Permissions"].ToString()) > 1)
                {
                    <td>
                        <span style="display:inline-block" class="Back_button">
                            @Html.ActionLink("Redaguoti", "Edit", "Advertisement", new { id = item.Id }, null)
                        </span>
                    </td>                   
                    <td>
                        <span style="display:inline-block" class="Back_button">
                            @Html.ActionLink("Ištrinti", "Delete", "Advertisement", new { id = item.Id }, null)
                        </span>
                    </td>
                }

            </tr>
        }

    </tbody>


</table>





<br />
Page @(Model.adsList.PageCount < Model.adsList.PageNumber ? 0 : Model.adsList.PageNumber) of @Model.adsList.PageCount

@Html.PagedListPager(Model.adsList, page => Url.Action("Index",
                                new { page, usernameFilter = ViewBag.usernameFilter, descriptionFilter = ViewBag.descriptionFilter, categoryFilter = ViewBag.categoryFilter }))

<script type="text/javascript">
    function resetFilter() {
        $("#usernameFilter").val("");
        $("#categoryFilter").val("0");
        $("#descriptionFilter").val("");
        $("#filterForm").submit();
        /*var form = $('#filterForm');
        $.ajax({
            cache: false,
            async: true,
            type: "POST",
            url: form.attr('action'),
            data: form.serialize(),
            success: function (data) {
                alert(data);
            }
        });*/

    }

    


    

    $(document).ready(function () {
        $("#categoryFilter").val(@ViewBag.categoryFilter);
    });





</script>